apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'chain.core.RunCHAIn'

repositories {
    mavenCentral()
    flatDir {
        dirs 'spsm/s-match/lib', 'JWI'
    }
}

sourceSets{
    fastTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/fastTest/java')
        }

    }
}

configurations {
    fastTestCompile.extendsFrom testCompile
    fastTestRuntime.extendsFrom testRuntime

    jwi
}

dependencies {

    // JSON parser
    // https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json', name: 'json', version: '20180130'

    // Apache Jena
    // https://mvnrepository.com/artifact/org.apache.jena/jena-arq
    compile group: 'org.apache.jena', name: 'jena-arq', version: '2.12.1'

    // JWI (out of date)
    // https://mvnrepository.com/artifact/edu.mit/jwi
//    jwi group: 'edu.mit', name: 'jwi', version: '2.4.0'

//    jwi name: 'edu.mit.jwi_2.4.0_jdk.jar'

    // https://mvnrepository.com/artifact/edu.mit/jwi
    compile group: 'edu.mit', name: 'jwi', version: '2.2.3'


    //JUnit
    // https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.12'
    fastTestCompile group: 'junit', name: 'junit', version: '4.12'

    // https://mvnrepository.com/artifact/net.sf.extjwnl/extjwnl
    compile group: 'net.sf.extjwnl', name: 'extjwnl', version: '1.8.0'
    // https://mvnrepository.com/artifact/net.sf.extjwnl/extjwnl-data-wn31
    compile group: 'net.sf.extjwnl', name: 'extjwnl-data-wn31', version: '1.2'


    // S-match  - Maven repo very out of date, use local references
    // https://mvnrepository.com/artifact/it.unitn.disi/s-match
    compile group: 'it.unitn.disi', name: 's-match-core', version: '2.0.0-SNAPSHOT'
    compile group: 'it.unitn.disi', name: 's-match-io', version: '2.0.0-SNAPSHOT'
    compile group: 'it.unitn.disi', name: 's-match-logic', version: '2.0.0-SNAPSHOT'
    compile group: 'it.unitn.disi', name: 's-match-nlp', version: '2.0.0-SNAPSHOT'
    compile group: 'it.unitn.disi', name: 's-match-nlp-annotation', version: '2.0.0-SNAPSHOT'
    compile group: 'it.unitn.disi', name: 's-match-spsm', version: '2.0.0-SNAPSHOT'
    compile group: 'it.unitn.disi', name: 's-match-wordnet', version: '2.0.0-SNAPSHOT'
    compile group: 'it.unitn.disi', name: 's-match-utils', version: '2.0.0-SNAPSHOT'
    compile group: 'it.unitn.disi', name: 's-match-spsm-prolog', version: '2.0.0-SNAPSHOT'
}




// Outputs the results of each test - needed to stop travis timing out
test {
    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

task fastTest(type: Test) {
    testClassesDir = sourceSets.fastTest.output.classesDir
    classpath = sourceSets.fastTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

//task getJWI {
//    def f = new File('JWI/edu.mit.jwi_2.4.0_jdk.jar')
//    if (!f.exists()) {
//        new URL('https://projects.csail.mit.edu/jwi/download.php?f=edu.mit.jwi_2.4.0_jdk.jar').withInputStream{ i -> f.withOutputStream{ it << i }}
//    }
//}


task getSPSM(type:Exec) {
    outputs.file('spsm/s-match/lib')

    doFirst {
        println('Getting SPSM...')
    }
    doLast {
        println('Retreived SPSM')
    }
    workingDir('spsm/s-match-source')

    //on windows:
//    commandLine 'cmd', '/c', 'stop.bat'

    //on linux
//    commandLine 'installSMatch'
    commandLine './installSMatch'
}

check.dependsOn fastTest
compileJava.dependsOn  getSPSM

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

